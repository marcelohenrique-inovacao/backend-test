// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backendtest.Domain.Data;

namespace backendtest.Domain.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210324183019_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("backendtest.Domain.Domain.Entities.Aplicativo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("SmallDatetime");

                    b.Property<Guid?>("IdDesenvolvedorResponsavel")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_DesenvolvedorResponsavel");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VarChar(255)");

                    b.Property<byte>("Plataforma")
                        .HasColumnType("TinyInt");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdDesenvolvedorResponsavel" }, "Idx_Id_DesenvolvedorResponsavel");

                    b.ToTable("Aplicativo");
                });

            modelBuilder.Entity("backendtest.Domain.Domain.Entities.Desenvolvedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VarChar(255)");

                    b.HasKey("Id");

                    b.ToTable("Desenvolvedor");
                });

            modelBuilder.Entity("backendtest.Domain.Domain.Entities.DesenvolvedorAplicativo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FkAplicativo")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Aplicativo");

                    b.Property<Guid>("FkDesenvolvedor")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Desenvolvedor");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FkAplicativo" }, "Idx_Id_Aplicativo");

                    b.HasIndex(new[] { "FkDesenvolvedor" }, "Idx_Id_Desenvolvedor");

                    b.HasIndex(new[] { "FkDesenvolvedor", "FkAplicativo" }, "Idx_Id_Desenvolvedor_Id_Aplicativo");

                    b.ToTable("DesenvolvedorAplicativo");
                });

            modelBuilder.Entity("backendtest.Domain.Domain.Entities.Aplicativo", b =>
                {
                    b.HasOne("backendtest.Domain.Domain.Entities.Desenvolvedor", "Responsavel")
                        .WithMany("Aplicativos")
                        .HasForeignKey("IdDesenvolvedorResponsavel")
                        .HasConstraintName("Id_DesenvolvedorResponsavel");

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("backendtest.Domain.Domain.Entities.Desenvolvedor", b =>
                {
                    b.OwnsOne("backendtest.Domain.Domain.ValueObjects.CPF", "Cpf", b1 =>
                        {
                            b1.Property<Guid>("DesenvolvedorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(11)
                                .IsUnicode(false)
                                .HasColumnType("Char(11)")
                                .HasColumnName("CPF")
                                .IsFixedLength(true);

                            b1.HasKey("DesenvolvedorId");

                            b1.ToTable("Desenvolvedor");

                            b1.WithOwner()
                                .HasForeignKey("DesenvolvedorId");
                        });

                    b.OwnsOne("backendtest.Domain.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("DesenvolvedorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasMaxLength(100)
                                .IsUnicode(false)
                                .HasColumnType("VarChar(100)")
                                .HasColumnName("Email");

                            b1.HasKey("DesenvolvedorId");

                            b1.ToTable("Desenvolvedor");

                            b1.WithOwner()
                                .HasForeignKey("DesenvolvedorId");
                        });

                    b.Navigation("Cpf");

                    b.Navigation("Email");
                });

            modelBuilder.Entity("backendtest.Domain.Domain.Entities.DesenvolvedorAplicativo", b =>
                {
                    b.HasOne("backendtest.Domain.Domain.Entities.Aplicativo", "FkAplicativoNavigation")
                        .WithMany("DesenvolvedorAplicativos")
                        .HasForeignKey("FkAplicativo")
                        .HasConstraintName("Id_Aplicativo")
                        .IsRequired();

                    b.HasOne("backendtest.Domain.Domain.Entities.Desenvolvedor", "FkDesenvolvedorNavigation")
                        .WithMany("DesenvolvedorAplicativos")
                        .HasForeignKey("FkDesenvolvedor")
                        .HasConstraintName("Id_Desenvolvedor")
                        .IsRequired();

                    b.Navigation("FkAplicativoNavigation");

                    b.Navigation("FkDesenvolvedorNavigation");
                });

            modelBuilder.Entity("backendtest.Domain.Domain.Entities.Aplicativo", b =>
                {
                    b.Navigation("DesenvolvedorAplicativos");
                });

            modelBuilder.Entity("backendtest.Domain.Domain.Entities.Desenvolvedor", b =>
                {
                    b.Navigation("Aplicativos");

                    b.Navigation("DesenvolvedorAplicativos");
                });
#pragma warning restore 612, 618
        }
    }
}
